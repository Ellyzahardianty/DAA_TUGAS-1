{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Ellyzahardianty/DAA_TUGAS-1/blob/main/Latihan%20Pertemuan%202_DAA\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 1"
      ],
      "metadata": {
        "id": "b60U2-b-MsQ0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np"
      ],
      "metadata": {
        "id": "pmrtZGZ6NQds"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 2"
      ],
      "metadata": {
        "id": "1ZWRXUNVNRWs"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7SInRT66IU8O",
        "outputId": "6de648e9-47f7-4076-a68e-31f301554679"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hasil [1, 2, 3, 4, 5, 6]\n"
          ]
        }
      ],
      "source": [
        "a = [1,2,3]\n",
        "b = [4,5,6]\n",
        "\n",
        "hasil = a + b\n",
        "print(\"hasil\", hasil)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 3"
      ],
      "metadata": {
        "id": "vH8F_p_4MvvT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def add(a, b):\n",
        "    result = []\n",
        "    for first, second in zip(a, b):\n",
        "        result.append(first + second)\n",
        "    return result\n",
        "\n",
        "a = [1, 2, 3]\n",
        "b = [4, 5, 6]\n",
        "\n",
        "hasil = add(a, b)\n",
        "print(\"hasil:\", hasil)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c2asUX4gKzkp",
        "outputId": "c486d6a9-fe4f-45a9-d7a7-3bb1411e7b6c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hasil: [5, 7, 9]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 4"
      ],
      "metadata": {
        "id": "QMb5VAePMx1D"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "nilai_siswa = np.array([85, 55, 40, 90])\n",
        "print(nilai_siswa[3])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zk-jwKwlLsCh",
        "outputId": "f31765a4-f044-4dee-c747-0c2ae2c1ffbf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "90\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 5"
      ],
      "metadata": {
        "id": "ejkhe1MyOUW8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "print(np.__version__)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JiSyAqMaOTfl",
        "outputId": "270669fd-45dd-4453-89ad-4832697f777d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1.23.5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 6"
      ],
      "metadata": {
        "id": "riiuLfLgQ68B"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Big O Natation\n",
        "## Constant time (O(1)) Complexity"
      ],
      "metadata": {
        "id": "oWbBhApvPzdH"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 7"
      ],
      "metadata": {
        "id": "uyK_Pi2nRlc5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Hello, world!\")\n",
        "print(\"Nama saya (bella)\")\n",
        "print(\"NIM saya (2022071015)\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vEbSIdS8Q8sz",
        "outputId": "c72b0c62-37aa-4f9d-9bfa-7380bbcf7bc3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Hello, world!\n",
            "Nama saya (bella)\n",
            "NIM saya (2022071015)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 8"
      ],
      "metadata": {
        "id": "ZJW5i-01Sijh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "if 5>2:\n",
        "  print(\"five is greater than two!\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Kp0AK_PpSiIB",
        "outputId": "17dc421b-6023-4af8-cf3e-f96732f0bb77"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "five is greater than two!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 9"
      ],
      "metadata": {
        "id": "lnIAhlmXTBgr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x = 5\n",
        "y = \"john\"\n",
        "print(x)\n",
        "print(y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "A1xhcjbaTBKF",
        "outputId": "5f3cae0b-e4bf-4e71-a44f-6f7367432308"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5\n",
            "john\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 10"
      ],
      "metadata": {
        "id": "glYT2o2eTTu7"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x = 4\n",
        "x = \"sally\"\n",
        "print(x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MEQdjXBqTTXB",
        "outputId": "790647b3-a903-441a-dfcf-7f8a53cf7ed5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "sally\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 11\n"
      ],
      "metadata": {
        "id": "KxR4KW4yVTwE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def getFirts(myList):\n",
        "  return myList[0]\n",
        "getFirts([1,2,3])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "H2ho59WsUhkz",
        "outputId": "f76927f2-cdca-4b1c-bb36-a6c24c222708"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def getFirts(myList):\n",
        "  return myList[0]\n",
        "getFirts([1,2,3,4,5,6,7,8,9,10])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZWB1h0GfWlaN",
        "outputId": "2c75af35-f869-4ed2-e018-1c215e317ba2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 12"
      ],
      "metadata": {
        "id": "7BGZkzkuYC7Y"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def getSecond(myList):\n",
        "  return myList[1]\n",
        "getSecond([1,2,3,4,5,6,7,8,9,10])"
      ],
      "metadata": {
        "id": "U7eVZZ1sXR8P",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c22a6006-8a06-4cdc-ae0f-e0b59c2ea83f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "getSecond([1, 2, 3])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mhHI1tkqVVvl",
        "outputId": "9d96215d-6667-40d4-c3b7-92a04cc8de53"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 13"
      ],
      "metadata": {
        "id": "WctkOqBDY1Rj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def getLast(myList):\n",
        "  return myList[2]\n",
        "  myList[len(myList)-1]\n",
        "getLast([1,2,3])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ae41BBQKY0mk",
        "outputId": "a9721b31-d326-4cf0-ca32-682073ee86c7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def getLast(myList):\n",
        "  return myList[9]\n",
        "  myList[len(myList)-1]\n",
        "getLast([1,2,3,4,5,6,7,8,9,10])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RMJtUmcoZlK-",
        "outputId": "f593d7f7-b014-47e6-acba-752c9ead6a14"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 14"
      ],
      "metadata": {
        "id": "-UcjhlsOajuP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def getSum(myList):\n",
        "    sum = 0\n",
        "    for item in myList:\n",
        "      sum = sum + item\n",
        "    return sum\n",
        "\n",
        "getSum([1,2,3])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f9D_T2L8ajD6",
        "outputId": "b2b6547f-32b9-4504-861c-84b12fa7ba47"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "getSum([1,2,3,4])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ugwp5OvgbFlF",
        "outputId": "e6c53cba-4a31-4b2c-fcff-d302eff01cdb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "getSum([1,2,3,4,5])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YROGRyvHa-jV",
        "outputId": "45b987ec-57d7-4998-c061-0ea06850ecf6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "15"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "getSum([7,3,5,11,8,10])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hMPnk8acc4TM",
        "outputId": "c1ce3075-1412-4a96-d80f-9d83e0b7a307"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "44"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def getSum(myList):\n",
        "    sum = 0\n",
        "    for item in myList:\n",
        "      sum = sum + item\n",
        "    return sum\n",
        "getSum([-2,4,5,-7,9,4,5])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RXOwurH3dB1Z",
        "outputId": "5e6172cb-04e2-4a83-eb94-bdc5d4f5727c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "18"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 14"
      ],
      "metadata": {
        "id": "-MaxqnEgdiZe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def getKali(myList):\n",
        "    kali = 1\n",
        "    for item in myList:\n",
        "        kali = kali*item\n",
        "    return kali\n",
        "getKali([1,2,3])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Mz_lsr_Hdfox",
        "outputId": "84462991-69ff-49e9-8d5a-50d2af61954d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "getKali([1,2,3,4,5])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xyN1EAifd6gv",
        "outputId": "9fe93b25-d69b-4734-e7e2-378764ac974f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "120"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 15\n"
      ],
      "metadata": {
        "id": "18t6BepXeXH8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def getBagi(myList):\n",
        "    bagi = 1\n",
        "    for item in myList:\n",
        "      bagi = bagi / item\n",
        "    return bagi\n",
        "getBagi([1,2,3])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GNqMiHlReaQl",
        "outputId": "9f3a5fee-f399-4418-b992-cef99dbac5d7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.16666666666666666"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "getBagi([1,2,3,4,5])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ef228RxNeiET",
        "outputId": "821813e4-60e7-44ee-ebae-4f7e4f137106"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.008333333333333333"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 16"
      ],
      "metadata": {
        "id": "1qPqMnOgjrZS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def getaverage(myList):\n",
        "    total = 0\n",
        "    for item in myList:\n",
        "        total += item\n",
        "    average = total / len(myList)\n",
        "    return average\n",
        "\n",
        "getaverage([1, 2, 3,4])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5z6qjdgujqzM",
        "outputId": "dd63192e-c9a0-42f3-d9d9-8c48b97ed065"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2.5"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NO 17"
      ],
      "metadata": {
        "id": "bC0RWZeOmD_2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def Bagi2Himpunan(a,b):\n",
        "  sum = 0\n",
        "  for i in a:\n",
        "    sum += i\n",
        "  sum2 = 0\n",
        "  for i in b:\n",
        "    sum2 += i\n",
        "  result = sum/sum2\n",
        "  return result\n",
        "Bagi2Himpunan (a = [10, 20, 30], b = [2, 4, 6])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_1p_MsmzrZ6k",
        "outputId": "9422ff5a-3c6a-4eed-a4b4-ea5ee9d87d6b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5.0"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def Kurang2Himpunan(a,b):\n",
        "  sum = 0\n",
        "  for i in a:\n",
        "    sum += i\n",
        "  sum2 = 0\n",
        "  for i in b:\n",
        "    sum2 += i\n",
        "  result = sum-sum2\n",
        "  return result\n",
        "\n",
        "Kurang2Himpunan (a = [10, 20, 30], b = [2, 4, 6])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EWL2WYqPqY7s",
        "outputId": "f6ecdfc0-0ea6-4ba6-c9d0-030779cf240c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "48"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    }
  ]
}